{{- $configDir := "/opt/eap/standalone/configuration" -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sso-keycloak.fullname" . }}
  labels: {{ include "sso-keycloak.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.rollingUpdate }}
  strategy:
    type: RollingUpdate
    rollingUpdate: {{ .Values.rollingUpdate | toYaml | nindent 6 }}
  {{- end }}
  minReadySeconds: 30 # The minimum number of seconds for which a newly created Pod should be ready
  selector:
    matchLabels: {{ include "sso-keycloak.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if .Values.configuration.enabled }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
      {{- end }}
      labels: {{ include "sso-keycloak.labels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              base_config={{ $configDir }}-provisioning/standalone-openshift.xml
              target_config={{ $configDir }}/standalone-openshift.xml
              if [[ -f "$base_config" ]]; then
                  rm "$target_config"
                  cp "$base_config" "$target_config"
              fi;
              /opt/eap/bin/openshift-launch.sh;
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
          {{- if eq .Values.livenessProbe.verification "script"}}
            exec:
              command:
              - /bin/bash
              - -c
              - timeout 60 /opt/eap/bin/livenessProbe.sh
          {{- else }}
            httpGet:
              path: /auth/realms/master/.well-known/openid-configuration
              port: 8080
          {{- end -}}
          {{ (omit .Values.livenessProbe "enabled" "verification") | toYaml | nindent 12 }}
          {{- end }}

          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
          {{- if eq .Values.readinessProbe.verification "script"}}
            exec:
              command:
              - /bin/bash
              - -c
              - timeout 60 /opt/eap/bin/readinessProbe.sh
          {{- else }}
            httpGet:
              path: /auth/realms/master/.well-known/openid-configuration
              port: 8080
          {{- end -}}
          {{ (omit .Values.readinessProbe "enabled" "verification") | toYaml | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
          env:
            # Postgres Service Endpoint
            - name: DB_POSTGRESQL_SERVICE_HOST
              value: {{ .Values.postgres.host }}
            - name: DB_POSTGRESQL_SERVICE_PORT
              value: {{ .Values.postgres.port | quote }}
            # DB Credentials
            - name: DB_USERNAME
              {{- if and .Values.postgres.credentials.secret .Values.postgres.credentials.usernameKey }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.credentials.secret }}
                  key: {{ .Values.postgres.credentials.usernameKey }}
              {{- else -}}
              value: {{ .Values.postgres.credentials.username }}
              {{- end }}
            - name: DB_PASSWORD
              {{- if and .Values.postgres.credentials.secret .Values.postgres.credentials.passwordKey }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.credentials.secret }}
                  key: {{ .Values.postgres.credentials.passwordKey }}
              {{- else -}}
              value: {{ .Values.postgres.credentials.password }}
              {{- end }}
            - name: DB_DATABASE
              value: {{ .Values.postgres.database }}
            # DB Admin Credentials
            - name: SSO_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "sso-keycloak.fullname" . }}-admin
                  key: username
            - name: SSO_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "sso-keycloak.fullname" . }}-admin
                  key: password
            # DB POOL SIZES
            - name: DB_MIN_POOL_SIZE
              value: {{ .Values.postgres.poolSize.min | quote }}
            - name: DB_MAX_POOL_SIZE
              value: {{ .Values.postgres.poolSize.max | quote }}
            # JGroups Cluster
            - name: JGROUPS_CLUSTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "sso-keycloak.fullname" . }}-jgroups
                  key: cluster-password
            # Additional server startup options (extension of JAVA_OPTS)
            - name: JAVA_OPTS_APPEND
              value: {{ .Values.additionalServerOptions }}
            - name: X509_CA_BUNDLE
              value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
            # https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.4/html/getting_started_with_jboss_eap_for_openshift_container_platform/reference_information#configuring_dns_ping
            {{- if .Values.pingService.enabled }}
            - name: JGROUPS_PING_PROTOCOL
              value: dns.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: {{ include "sso-keycloak.fullname" . }}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: {{ .Values.pingService.port | quote }}
            {{- end }}
            # Other environments
            - name: DB_JNDI
              value: java:jboss/datasources/KeycloakDS
            - name: DB_SERVICE_PREFIX_MAPPING
              value: db-postgresql=DB
            - name: TX_DATABASE_PREFIX_MAPPING
              value: db-postgresql=DB
            - name: TZ
              value: America/Vancouver
          volumeMounts:
            {{- if .Values.tls.enabled }}
            - mountPath: /etc/x509/https
              name: sso-x509-https-volume
              readOnly: true
            - mountPath: /etc/x509/jgroups
              name: sso-x509-jgroups-volume
              readOnly: true
            {{- end }}
            {{- if .Values.persistentLog.enabled }}
            - mountPath: {{ .Values.persistentLog.mountPath }}
              name: logs-volume
            {{- end }}
            {{- if .Values.configuration.enabled }}
            - name: config-volume
              mountPath: {{ $configDir }}-provisioning
              readOnly: true
            - name: {{ include "sso-keycloak.fullname" . }}-probe-netrc-volume
              mountPath: /mnt/rh-sso
            {{- end }}
      {{- if .Values.affinity }}
      affinity: {{ .Values.affinity | toYaml | nindent 8 }}
      {{- else if .Values.affinityTemplate }}
      affinity: {{ tpl .Values.affinityTemplate . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.tls.enabled }}
        - name: sso-x509-https-volume
          secret:
            defaultMode: 420
            secretName: {{ include "sso-keycloak.fullname" . }}-x509-https
        - name: sso-x509-jgroups-volume
          secret:
            defaultMode: 420
            secretName: {{ include "sso-keycloak.fullname" . }}-x509-jgroups
        {{- end }}
        {{- if .Values.persistentLog.enabled }}
        - name: logs-volume
          persistentVolumeClaim:
            claimName: {{ include "sso-keycloak.fullname" . }}-logs
        {{- end }}
        {{- if .Values.configuration.enabled }}
        - name: config-volume
          configMap:
            name: {{ include "sso-keycloak.fullname" . }}-sso-config
            defaultMode: 420
            items:
              - key: standalone-openshift.xml
                path: standalone-openshift.xml
        {{- end }}
        - name: {{ include "sso-keycloak.fullname" . }}-probe-netrc-volume
          emptyDir:
            medium: Memory
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
